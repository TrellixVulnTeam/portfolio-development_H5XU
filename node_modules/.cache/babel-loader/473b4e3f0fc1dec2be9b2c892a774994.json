{"ast":null,"code":"var _jsxFileName = \"/Users/zach/Desktop/Portfolio/src/components/Contact.jsx\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact_form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n            required: \"Email is Required\",\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"Entered value does not match email format\"\n            }\n          }, {\n            required: true\n          }),\n          type: \"email\",\n          placeholder: \"Email *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"third\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"message\", {\n            required: true\n          }),\n          placeholder: \"Message *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Message is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edina_tm_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"color\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useForm","emailjs","Contact","handleSubmit","errors","name","type","register","required","pattern","value","message","email"],"sources":["/Users/zach/Desktop/Portfolio/src/components/Contact.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport emailjs from '@emailjs/browser';\r\n\r\nconst Contact = () => {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <form className=\"contact_form\" onSubmit={handleSubmit}>\r\n        <div className=\"first_row\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name *\"\r\n          />\r\n          {errors.name && errors.name.type === \"required\" && (\r\n            <span className=\"invalid-feedback\">Name is required</span>\r\n          )}\r\n        </div>\r\n        {/* End .first_row */}\r\n\r\n        <div className=\"second\">\r\n          <input\r\n            {...register(\r\n              \"email\",\r\n              {\r\n                required: \"Email is Required\",\r\n                pattern: {\r\n                  value: /\\S+@\\S+\\.\\S+/,\r\n                  message: \"Entered value does not match email format\",\r\n                },\r\n              },\r\n              { required: true }\r\n            )}\r\n            type=\"email\"\r\n            placeholder=\"Email *\"\r\n          />\r\n          {errors.email && (\r\n            <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n          )}\r\n        </div>\r\n        {/* End .second */}\r\n\r\n        <div className=\"third\">\r\n          <textarea\r\n            {...register(\"message\", { required: true })}\r\n            placeholder=\"Message *\"\r\n          ></textarea>\r\n          {errors.message && (\r\n            <span className=\"invalid-feedback\">Message is required</span>\r\n          )}\r\n        </div>\r\n        {/* End .third */}\r\n\r\n        <div className=\"edina_tm_button\">\r\n          <button type=\"submit\" className=\"color\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n        {/* End tokyo_tm_button */}\r\n      </form>\r\n      {/* End contact */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAIpB,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,cAAhB;MAA+B,QAAQ,EAAEC,YAAzC;MAAA,wBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,WAAW,EAAC;QAFd;UAAA;UAAA;UAAA;QAAA,QADF,EAKGC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,IAAZ,KAAqB,UAApC,iBACC;UAAM,SAAS,EAAC,kBAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE,sBACMC,QAAQ,CACV,OADU,EAEV;YACEC,QAAQ,EAAE,mBADZ;YAEEC,OAAO,EAAE;cACPC,KAAK,EAAE,cADA;cAEPC,OAAO,EAAE;YAFF;UAFX,CAFU,EASV;YAAEH,QAAQ,EAAE;UAAZ,CATU,CADd;UAYE,IAAI,EAAC,OAZP;UAaE,WAAW,EAAC;QAbd;UAAA;UAAA;UAAA;QAAA,QADF,EAgBGJ,MAAM,CAACQ,KAAP,iBACC;UAAM,SAAS,EAAC,kBAAhB;UAAA,UAAoCR,MAAM,CAACQ,KAAP,CAAaD;QAAjD;UAAA;UAAA;UAAA;QAAA,QAjBJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAkCE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE,yBACMJ,QAAQ,CAAC,SAAD,EAAY;YAAEC,QAAQ,EAAE;UAAZ,CAAZ,CADd;UAEE,WAAW,EAAC;QAFd;UAAA;UAAA;UAAA;QAAA,QADF,EAKGJ,MAAM,CAACO,OAAP,iBACC;UAAM,SAAS,EAAC,kBAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAlCF,eA6CE;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,OAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA7CF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAyDD,CA7DD;;KAAMT,O;AA+DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}